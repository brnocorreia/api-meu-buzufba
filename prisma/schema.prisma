generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Route {
  routeId           Int             @id @default(autoincrement()) @map("route_id")
  routeName         String          @map("route_name") @db.VarChar(30)
  tripLength        Int             @map("trip_length")
  departureLocation String          @map("departure_location") @db.VarChar(100)
  arrivalLocation   String          @map("arrival_location") @db.VarChar(100)
  statusCd          String          @default("A") @map("status_cd") @db.VarChar(10)
  createdAt         DateTime        @default(now()) @map("created_at")
  updatedAt         DateTime        @default(now()) @updatedAt @map("updated_at")
  departures        Departure[]
  RouteLocation     RouteLocation[]
  RouteStop         RouteStop[]

  @@map("routes")
}

model Departure {
  routeId       Int     @map("route_id")
  departureTime String  @map("departure_time") @db.VarChar(10)
  obs           String? @db.VarChar(255)
  statusCd      String  @default("A") @map("status_cd") @db.VarChar(10)
  route         Route   @relation(fields: [routeId], references: [routeId])

  @@id([routeId, departureTime])
  @@map("departures")
}

model Location {
  locationId    Int             @id @default(autoincrement()) @map("location_id")
  locationName  String          @map("location_name") @db.VarChar(255)
  locationLat   Decimal         @map("location_lat")
  locationLng   Decimal         @map("location_lng")
  statusCd      String          @default("A") @map("status_cd") @db.VarChar(10)
  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @default(now()) @updatedAt @map("updated_at")
  RouteLocation RouteLocation[]

  @@map("locations")
}

model RouteLocation {
  routeId    Int      @map("route_id")
  locationId Int      @map("location_id")
  obs        String?  @db.VarChar(255)
  location   Location @relation(fields: [locationId], references: [locationId])
  route      Route    @relation(fields: [routeId], references: [routeId])

  @@id([routeId, locationId])
  @@map("route_locations")
}

model Stop {
  stopId    Int         @id @default(autoincrement()) @map("stop_id")
  stopName  String      @map("stop_name") @db.VarChar(100)
  stopLat   Decimal     @map("stop_lat")
  stopLng   Decimal     @map("stop_lng")
  statusCd  String      @default("A") @map("status_cd") @db.VarChar(10)
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @default(now()) @updatedAt @map("updated_at")
  RouteStop RouteStop[]

  @@map("stops")
}

model RouteStop {
  routeId   Int    @map("route_id")
  stopId    Int    @map("stop_id")
  stopType  String @map("stop_type") @db.VarChar(10)
  stopOrder Int    @map("stop_order")
  route     Route  @relation(fields: [routeId], references: [routeId])
  stop      Stop   @relation(fields: [stopId], references: [stopId])

  @@id([routeId, stopType, stopOrder])
  @@map("route_stops")
}
